version: 2.1

orbs:
  hmpps: ministryofjustice/hmpps@3.8

executors:
  validator:
    docker:
      - image: circleci/node:12-buster-browsers
    working_directory: ~/app
  integration-tests:
    docker:
      - image: circleci/node:12-buster-browsers
      - image: circleci/postgres:10.6-alpine-ram
        environment:
          POSTGRES_PASSWORD: check-my-diary
          POSTGRES_USER: check-my-diary
          POSTGRES_DB: check-my-diary
    working_directory: ~/app

jobs:
  validate:
    executor: validator
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install Dependencies
          command: npm ci
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
            - ~/.cache
      - run:
          name: Run eslint
          command: npm run lint
      - run:
          name: Run Tests
          command: npm run test
      - run:
          name: Build Application
          command: NODE_ENV=production npm run build
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
            - .cache/Cypress
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results/unit-test-reports.html

  integration_test:
    executor: integration-tests
    steps:
      - checkout
      - attach_workspace:
          at: ~/app
      - run:
          name: Get wiremock
          command: curl -o wiremock.jar https://repo1.maven.org/maven2/com/github/tomakehurst/wiremock-standalone/2.26.3/wiremock-standalone-2.26.3.jar
      - run:
          name: Run wiremock
          command: java -jar wiremock.jar --port 9191
          background: true
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Run the node app.
          command: npm run start-feature
          background: true
      - run:
          name: Wait for node app to start
          command: sleep 5
      - run:
          name: integration tests
          command: npm run int-test
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: integration-tests/videos
      - store_artifacts:
          path: integration-tests/screenshots

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - validate:
          filters:
            tags:
              ignore: /.*/
      - integration_test:
          requires:
            - validate
      - hmpps/helm_lint:
          name: helm_lint
      - hmpps/build_docker:
          name: build_docker
          filters:
            branches:
              only:
                - main
      - hmpps/deploy_env:
          name: deploy_dev
          env: "dev"
          filters:
            branches:
              only:
                - main
          requires:
            - helm_lint
            - integration_test
            - build_docker
      - request-preprod-approval:
          type: approval
          requires:
            - deploy_dev
      - hmpps/deploy_env:
          name: deploy_preprod
          env: "preprod"
          context: check-my-diary-preprod
          requires:
            - request-preprod-approval
      - request-prod-approval:
          type: approval
          requires:
            - deploy_preprod
      - hmpps/deploy_env:
          name: deploy_prod
          env: "prod"
          slack_notification: true
          context:
            - check-my-diary-prod
            - hmpps-common-vars
          requires:
            - request-prod-approval

  scheduled:
    triggers:
      - schedule:
          cron: "0 7 * * 1-5"
          filters:
            branches:
              only:
                - main
    jobs:
      - hmpps/npm_security_audit:
          context:
            - hmpps-common-vars
