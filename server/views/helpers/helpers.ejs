<%
  /**
   * Array of days in same order as the view
   * @returns {string[]}
   */
  getDays = () => ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];

  getTypeClass = type => ({
      'Rest Day': 'rest-day',
      'Holiday': 'holiday',
      'Illness': 'illness',
      'no-day': 'no-day',
      'Shift': 'shift',
      'Detached Duty': 'detached-duty',
      'TU Officials Leave Days': 'tu-official',
      'TU Officials Leave Hours': 'tu-official',
    }[type] || 'absence');

  getRelativeModifiedDate = (moment, modifiedDate) => {

    var s = ( moment().diff(moment(modifiedDate)))/ 1000,
      m = s / 60,
      h = m / 60,
      d = h / 24,
      y = d / 365.242199,
      tmp;

    return ( tmp = Math.round(s) ) === 1 ? 'just now'
        : m < 1.01                      ? tmp + ' seconds ago'
        : ( tmp = Math.round(m) ) === 1 ? 'a minute ago'
        : h < 1.01                      ? tmp + ' minutes ago'
        : ( tmp = Math.round(h) ) === 1 ? 'an hour ago'
        : d < 1.01                      ? tmp + ' hours ago'
        : ( tmp = Math.round(d) ) === 1 ? 'yesterday'
        : y < 1.01                      ? tmp + ' days ago'
        : ( tmp = Math.round(y) ) === 1 ? 'a year ago'
        : tmp + ' years ago';
  }
%>
